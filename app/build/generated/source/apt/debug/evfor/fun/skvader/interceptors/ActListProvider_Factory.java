// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.interceptors;

import dagger.internal.Factory;
import evfor.fun.skvader.models.Act;
import evfor.fun.skvader.models.ActId;
import evfor.fun.skvader.repository.ReaderRepos;
import javax.inject.Provider;

public final class ActListProvider_Factory implements Factory<ActListProvider> {
  private final Provider<ReaderRepos<Act, ActId>> actReaderProvider;

  public ActListProvider_Factory(Provider<ReaderRepos<Act, ActId>> actReaderProvider) {
    assert actReaderProvider != null;
    this.actReaderProvider = actReaderProvider;
  }

  @Override
  public ActListProvider get() {
    return new ActListProvider(actReaderProvider.get());
  }

  public static Factory<ActListProvider> create(
      Provider<ReaderRepos<Act, ActId>> actReaderProvider) {
    return new ActListProvider_Factory(actReaderProvider);
  }

  /** Proxies {@link ActListProvider#ActListProvider(ReaderRepos)}. */
  public static ActListProvider newActListProvider(ReaderRepos<Act, ActId> actReader) {
    return new ActListProvider(actReader);
  }
}
