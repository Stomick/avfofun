// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.mvp.presenters;

import dagger.MembersInjector;
import evfor.fun.skvader.models.User;
import evfor.fun.skvader.repository.ReaderRepos;
import evfor.fun.skvader.repository.WriterRepos;
import evfor.fun.skvader.utils.AccountPreferenceManager;
import javax.inject.Provider;

public final class EditProfilePresenter_MembersInjector
    implements MembersInjector<EditProfilePresenter> {
  private final Provider<ReaderRepos<User, Integer>> userReaderProvider;

  private final Provider<WriterRepos<User>> userWriterProvider;

  private final Provider<AccountPreferenceManager> preferenceManagerProvider;

  public EditProfilePresenter_MembersInjector(
      Provider<ReaderRepos<User, Integer>> userReaderProvider,
      Provider<WriterRepos<User>> userWriterProvider,
      Provider<AccountPreferenceManager> preferenceManagerProvider) {
    assert userReaderProvider != null;
    this.userReaderProvider = userReaderProvider;
    assert userWriterProvider != null;
    this.userWriterProvider = userWriterProvider;
    assert preferenceManagerProvider != null;
    this.preferenceManagerProvider = preferenceManagerProvider;
  }

  public static MembersInjector<EditProfilePresenter> create(
      Provider<ReaderRepos<User, Integer>> userReaderProvider,
      Provider<WriterRepos<User>> userWriterProvider,
      Provider<AccountPreferenceManager> preferenceManagerProvider) {
    return new EditProfilePresenter_MembersInjector(
        userReaderProvider, userWriterProvider, preferenceManagerProvider);
  }

  @Override
  public void injectMembers(EditProfilePresenter instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.userReader = userReaderProvider.get();
    instance.userWriter = userWriterProvider.get();
    instance.preferenceManager = preferenceManagerProvider.get();
  }

  public static void injectUserReader(
      EditProfilePresenter instance, Provider<ReaderRepos<User, Integer>> userReaderProvider) {
    instance.userReader = userReaderProvider.get();
  }

  public static void injectUserWriter(
      EditProfilePresenter instance, Provider<WriterRepos<User>> userWriterProvider) {
    instance.userWriter = userWriterProvider.get();
  }

  public static void injectPreferenceManager(
      EditProfilePresenter instance, Provider<AccountPreferenceManager> preferenceManagerProvider) {
    instance.preferenceManager = preferenceManagerProvider.get();
  }
}
