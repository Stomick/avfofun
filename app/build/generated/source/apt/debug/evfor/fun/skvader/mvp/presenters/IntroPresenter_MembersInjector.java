// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.mvp.presenters;

import dagger.MembersInjector;
import evfor.fun.skvader.utils.AccountPreferenceManager;
import javax.inject.Provider;

public final class IntroPresenter_MembersInjector implements MembersInjector<IntroPresenter> {
  private final Provider<AccountPreferenceManager> preferenceManagerProvider;

  public IntroPresenter_MembersInjector(
      Provider<AccountPreferenceManager> preferenceManagerProvider) {
    assert preferenceManagerProvider != null;
    this.preferenceManagerProvider = preferenceManagerProvider;
  }

  public static MembersInjector<IntroPresenter> create(
      Provider<AccountPreferenceManager> preferenceManagerProvider) {
    return new IntroPresenter_MembersInjector(preferenceManagerProvider);
  }

  @Override
  public void injectMembers(IntroPresenter instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.preferenceManager = preferenceManagerProvider.get();
  }

  public static void injectPreferenceManager(
      IntroPresenter instance, Provider<AccountPreferenceManager> preferenceManagerProvider) {
    instance.preferenceManager = preferenceManagerProvider.get();
  }
}
