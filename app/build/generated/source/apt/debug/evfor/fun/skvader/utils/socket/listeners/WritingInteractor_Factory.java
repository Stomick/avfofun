// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.utils.socket.listeners;

import dagger.internal.Factory;
import evfor.fun.skvader.utils.socket.models.ModelConnect;
import io.socket.client.Socket;
import javax.inject.Provider;

public final class WritingInteractor_Factory implements Factory<WritingInteractor> {
  private final Provider<Socket> socketProvider;

  private final Provider<ModelConnect> modelProvider;

  public WritingInteractor_Factory(
      Provider<Socket> socketProvider, Provider<ModelConnect> modelProvider) {
    assert socketProvider != null;
    this.socketProvider = socketProvider;
    assert modelProvider != null;
    this.modelProvider = modelProvider;
  }

  @Override
  public WritingInteractor get() {
    return new WritingInteractor(socketProvider.get(), modelProvider.get());
  }

  public static Factory<WritingInteractor> create(
      Provider<Socket> socketProvider, Provider<ModelConnect> modelProvider) {
    return new WritingInteractor_Factory(socketProvider, modelProvider);
  }
}
