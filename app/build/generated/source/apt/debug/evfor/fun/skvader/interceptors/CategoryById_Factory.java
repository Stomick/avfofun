// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.interceptors;

import dagger.internal.Factory;
import evfor.fun.skvader.network.api.ContentApi;
import javax.inject.Provider;

public final class CategoryById_Factory implements Factory<CategoryById> {
  private final Provider<ContentApi> apiProvider;

  public CategoryById_Factory(Provider<ContentApi> apiProvider) {
    assert apiProvider != null;
    this.apiProvider = apiProvider;
  }

  @Override
  public CategoryById get() {
    return new CategoryById(apiProvider.get());
  }

  public static Factory<CategoryById> create(Provider<ContentApi> apiProvider) {
    return new CategoryById_Factory(apiProvider);
  }

  /** Proxies {@link CategoryById#CategoryById(ContentApi)}. */
  public static CategoryById newCategoryById(ContentApi api) {
    return new CategoryById(api);
  }
}
