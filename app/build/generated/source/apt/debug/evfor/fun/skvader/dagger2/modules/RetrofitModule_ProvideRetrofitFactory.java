// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.dagger2.modules;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class RetrofitModule_ProvideRetrofitFactory implements Factory<Retrofit> {
  private final Provider<Retrofit.Builder> builderProvider;

  public RetrofitModule_ProvideRetrofitFactory(Provider<Retrofit.Builder> builderProvider) {
    assert builderProvider != null;
    this.builderProvider = builderProvider;
  }

  @Override
  public Retrofit get() {
    return Preconditions.checkNotNull(
        RetrofitModule.provideRetrofit(builderProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Retrofit> create(Provider<Retrofit.Builder> builderProvider) {
    return new RetrofitModule_ProvideRetrofitFactory(builderProvider);
  }
}
