// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.repository.cache;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class CacheMap_Factory<K, T> implements Factory<CacheMap<K, T>> {
  private final Provider<CacheOptions> optionsProvider;

  public CacheMap_Factory(Provider<CacheOptions> optionsProvider) {
    assert optionsProvider != null;
    this.optionsProvider = optionsProvider;
  }

  @Override
  public CacheMap<K, T> get() {
    return new CacheMap<K, T>(optionsProvider.get());
  }

  public static <K, T> Factory<CacheMap<K, T>> create(Provider<CacheOptions> optionsProvider) {
    return new CacheMap_Factory<K, T>(optionsProvider);
  }

  /** Proxies {@link CacheMap#CacheMap(CacheOptions)}. */
  public static <K, T> CacheMap<K, T> newCacheMap(CacheOptions options) {
    return new CacheMap<K, T>(options);
  }
}
