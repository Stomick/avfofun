// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.dagger2.modules;

import android.content.Context;
import android.content.res.Resources;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProviderResourcesFactory implements Factory<Resources> {
  private final AppModule module;

  private final Provider<Context> contextProvider;

  public AppModule_ProviderResourcesFactory(AppModule module, Provider<Context> contextProvider) {
    assert module != null;
    this.module = module;
    assert contextProvider != null;
    this.contextProvider = contextProvider;
  }

  @Override
  public Resources get() {
    return Preconditions.checkNotNull(
        module.providerResources(contextProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Resources> create(AppModule module, Provider<Context> contextProvider) {
    return new AppModule_ProviderResourcesFactory(module, contextProvider);
  }

  /** Proxies {@link AppModule#providerResources(Context)}. */
  public static Resources proxyProviderResources(AppModule instance, Context context) {
    return instance.providerResources(context);
  }
}
