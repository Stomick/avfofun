// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.ui.activities;

import dagger.MembersInjector;
import evfor.fun.skvader.network.api.MainApi;
import evfor.fun.skvader.repository.user.UserReader;
import javax.inject.Provider;

public final class ReviewActivity_MembersInjector implements MembersInjector<ReviewActivity> {
  private final Provider<MainApi> mainApiProvider;

  private final Provider<UserReader> userReaderProvider;

  public ReviewActivity_MembersInjector(
      Provider<MainApi> mainApiProvider, Provider<UserReader> userReaderProvider) {
    assert mainApiProvider != null;
    this.mainApiProvider = mainApiProvider;
    assert userReaderProvider != null;
    this.userReaderProvider = userReaderProvider;
  }

  public static MembersInjector<ReviewActivity> create(
      Provider<MainApi> mainApiProvider, Provider<UserReader> userReaderProvider) {
    return new ReviewActivity_MembersInjector(mainApiProvider, userReaderProvider);
  }

  @Override
  public void injectMembers(ReviewActivity instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.mainApi = mainApiProvider.get();
    instance.userReader = userReaderProvider.get();
  }

  public static void injectMainApi(ReviewActivity instance, Provider<MainApi> mainApiProvider) {
    instance.mainApi = mainApiProvider.get();
  }

  public static void injectUserReader(
      ReviewActivity instance, Provider<UserReader> userReaderProvider) {
    instance.userReader = userReaderProvider.get();
  }
}
