// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.dagger2.modules;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import evfor.fun.skvader.network.api.RegistrationApi;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class RegLogModule_ProvideRegistrationApiFactory implements Factory<RegistrationApi> {
  private final RegLogModule module;

  private final Provider<Retrofit> retrofitProvider;

  public RegLogModule_ProvideRegistrationApiFactory(
      RegLogModule module, Provider<Retrofit> retrofitProvider) {
    assert module != null;
    this.module = module;
    assert retrofitProvider != null;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public RegistrationApi get() {
    return Preconditions.checkNotNull(
        module.provideRegistrationApi(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<RegistrationApi> create(
      RegLogModule module, Provider<Retrofit> retrofitProvider) {
    return new RegLogModule_ProvideRegistrationApiFactory(module, retrofitProvider);
  }
}
