// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.mvp.presenters;

import dagger.MembersInjector;
import evfor.fun.skvader.models.Act;
import evfor.fun.skvader.models.User;
import evfor.fun.skvader.repository.ReaderRepos;
import java.util.List;
import javax.inject.Provider;

public final class ActListPresenter_MembersInjector implements MembersInjector<ActListPresenter> {
  private final Provider<ReaderRepos<List<Act>, User>> actListReaderProvider;

  private final Provider<ReaderRepos<User, Integer>> userReaderProvider;

  public ActListPresenter_MembersInjector(
      Provider<ReaderRepos<List<Act>, User>> actListReaderProvider,
      Provider<ReaderRepos<User, Integer>> userReaderProvider) {
    assert actListReaderProvider != null;
    this.actListReaderProvider = actListReaderProvider;
    assert userReaderProvider != null;
    this.userReaderProvider = userReaderProvider;
  }

  public static MembersInjector<ActListPresenter> create(
      Provider<ReaderRepos<List<Act>, User>> actListReaderProvider,
      Provider<ReaderRepos<User, Integer>> userReaderProvider) {
    return new ActListPresenter_MembersInjector(actListReaderProvider, userReaderProvider);
  }

  @Override
  public void injectMembers(ActListPresenter instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.actListReader = actListReaderProvider.get();
    instance.userReader = userReaderProvider.get();
  }

  public static void injectActListReader(
      ActListPresenter instance, Provider<ReaderRepos<List<Act>, User>> actListReaderProvider) {
    instance.actListReader = actListReaderProvider.get();
  }

  public static void injectUserReader(
      ActListPresenter instance, Provider<ReaderRepos<User, Integer>> userReaderProvider) {
    instance.userReader = userReaderProvider.get();
  }
}
