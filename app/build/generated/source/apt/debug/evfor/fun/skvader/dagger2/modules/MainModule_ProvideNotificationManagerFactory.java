// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.dagger2.modules;

import android.app.NotificationManager;
import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class MainModule_ProvideNotificationManagerFactory
    implements Factory<NotificationManager> {
  private final Provider<Context> contextProvider;

  public MainModule_ProvideNotificationManagerFactory(Provider<Context> contextProvider) {
    assert contextProvider != null;
    this.contextProvider = contextProvider;
  }

  @Override
  public NotificationManager get() {
    return Preconditions.checkNotNull(
        MainModule.provideNotificationManager(contextProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<NotificationManager> create(Provider<Context> contextProvider) {
    return new MainModule_ProvideNotificationManagerFactory(contextProvider);
  }
}
