// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.ui.utils.reg_step_view;

import dagger.MembersInjector;
import evfor.fun.skvader.interceptors.Interactor;
import evfor.fun.skvader.models.UpdatePhoto;
import io.reactivex.Completable;
import javax.inject.Provider;

public final class Step2_MembersInjector implements MembersInjector<Step2> {
  private final Provider<Interactor<Completable, UpdatePhoto>> updatePhotoProvider;

  public Step2_MembersInjector(Provider<Interactor<Completable, UpdatePhoto>> updatePhotoProvider) {
    assert updatePhotoProvider != null;
    this.updatePhotoProvider = updatePhotoProvider;
  }

  public static MembersInjector<Step2> create(
      Provider<Interactor<Completable, UpdatePhoto>> updatePhotoProvider) {
    return new Step2_MembersInjector(updatePhotoProvider);
  }

  @Override
  public void injectMembers(Step2 instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.updatePhoto = updatePhotoProvider.get();
  }

  public static void injectUpdatePhoto(
      Step2 instance, Provider<Interactor<Completable, UpdatePhoto>> updatePhotoProvider) {
    instance.updatePhoto = updatePhotoProvider.get();
  }
}
