// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.interceptors;

import dagger.internal.Factory;
import evfor.fun.skvader.models.User;
import evfor.fun.skvader.network.api.MainApi;
import evfor.fun.skvader.repository.LocalRepository;
import javax.inject.Provider;

public final class UpdatePhotoInteractor_Factory implements Factory<UpdatePhotoInteractor> {
  private final Provider<MainApi> apiProvider;

  private final Provider<LocalRepository<User, Integer>> localRepositoryProvider;

  public UpdatePhotoInteractor_Factory(
      Provider<MainApi> apiProvider,
      Provider<LocalRepository<User, Integer>> localRepositoryProvider) {
    assert apiProvider != null;
    this.apiProvider = apiProvider;
    assert localRepositoryProvider != null;
    this.localRepositoryProvider = localRepositoryProvider;
  }

  @Override
  public UpdatePhotoInteractor get() {
    return new UpdatePhotoInteractor(apiProvider.get(), localRepositoryProvider.get());
  }

  public static Factory<UpdatePhotoInteractor> create(
      Provider<MainApi> apiProvider,
      Provider<LocalRepository<User, Integer>> localRepositoryProvider) {
    return new UpdatePhotoInteractor_Factory(apiProvider, localRepositoryProvider);
  }
}
