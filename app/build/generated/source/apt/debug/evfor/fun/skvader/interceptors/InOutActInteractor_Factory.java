// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package evfor.fun.skvader.interceptors;

import dagger.internal.Factory;
import evfor.fun.skvader.network.api.MainApi;
import evfor.fun.skvader.repository.user.EditUserProfile;
import evfor.fun.skvader.repository.user.UserReader;
import javax.inject.Provider;

public final class InOutActInteractor_Factory implements Factory<InOutActInteractor> {
  private final Provider<MainApi> apiProvider;

  private final Provider<EditUserProfile> editUserProfileProvider;

  private final Provider<UserReader> userReaderProvider;

  public InOutActInteractor_Factory(
      Provider<MainApi> apiProvider,
      Provider<EditUserProfile> editUserProfileProvider,
      Provider<UserReader> userReaderProvider) {
    assert apiProvider != null;
    this.apiProvider = apiProvider;
    assert editUserProfileProvider != null;
    this.editUserProfileProvider = editUserProfileProvider;
    assert userReaderProvider != null;
    this.userReaderProvider = userReaderProvider;
  }

  @Override
  public InOutActInteractor get() {
    return new InOutActInteractor(
        apiProvider.get(), editUserProfileProvider.get(), userReaderProvider.get());
  }

  public static Factory<InOutActInteractor> create(
      Provider<MainApi> apiProvider,
      Provider<EditUserProfile> editUserProfileProvider,
      Provider<UserReader> userReaderProvider) {
    return new InOutActInteractor_Factory(apiProvider, editUserProfileProvider, userReaderProvider);
  }
}
